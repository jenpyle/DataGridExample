#pragma checksum "C:\Users\jennifer.pyle\source\gitProjects\DataGridAnimation\Views\DataGridPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "D0DF92614F734D8547FA2FDB5D31D1BD8A3BCB6E28BF0DC83C25ED9AACFC693F"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataGridAnimation.Views
{
    partial class DataGridPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_DataGrid_ItemsSource(global::Microsoft.Toolkit.Uwp.UI.Controls.DataGrid obj, global::System.Collections.IEnumerable value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.IEnumerable) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.IEnumerable), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_FontIcon_Glyph(global::Windows.UI.Xaml.Controls.FontIcon obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Glyph = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class DataGridPage_obj50_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IDataGridPage_Bindings
        {
            private global::DataGridAnimation.Core.Models.SampleOrder dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj50;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj50GlyphDisabled = false;

            public DataGridPage_obj50_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 390 && columnNumber == 37)
                {
                    isobj50GlyphDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 50: // Views\DataGridPage.xaml line 386
                        this.obj50 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.FontIcon)target);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj50.Target as global::Windows.UI.Xaml.Controls.FontIcon).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::DataGridAnimation.Core.Models.SampleOrder) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IDataGridPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::DataGridAnimation.Core.Models.SampleOrder)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::DataGridAnimation.Core.Models.SampleOrder obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Symbol(obj.Symbol, phase);
                    }
                }
            }
            private void Update_Symbol(global::System.Char obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\DataGridPage.xaml line 386
                    if (!isobj50GlyphDisabled)
                    {
                        if ((this.obj50.Target as global::Windows.UI.Xaml.Controls.FontIcon) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_FontIcon_Glyph((this.obj50.Target as global::Windows.UI.Xaml.Controls.FontIcon), obj.ToString(), null);
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class DataGridPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IDataGridPage_Bindings
        {
            private global::DataGridAnimation.Views.DataGridPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.DataGrid obj48;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj48ItemsSourceDisabled = false;

            private DataGridPage_obj1_BindingsTracking bindingsTracking;

            public DataGridPage_obj1_Bindings()
            {
                this.bindingsTracking = new DataGridPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 354 && columnNumber == 17)
                {
                    isobj48ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 48: // Views\DataGridPage.xaml line 348
                        this.obj48 = (global::Microsoft.Toolkit.Uwp.UI.Controls.DataGrid)target;
                        this.bindingsTracking.RegisterTwoWayListener_48(this.obj48);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IDataGridPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::DataGridAnimation.Views.DataGridPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::DataGridAnimation.Views.DataGridPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SourceDP(obj.SourceDP, phase);
                    }
                }
            }
            private void Update_SourceDP(global::System.Collections.ObjectModel.ObservableCollection<global::DataGridAnimation.Core.Models.SampleOrder> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SourceDP(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DataGridPage.xaml line 348
                    if (!isobj48ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_DataGrid_ItemsSource(this.obj48, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_48_ItemsSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SourceDP = (global::System.Collections.ObjectModel.ObservableCollection<global::DataGridAnimation.Core.Models.SampleOrder>)this.obj48.ItemsSource;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class DataGridPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<DataGridPage_obj1_Bindings> weakRefToBindingObj; 

                public DataGridPage_obj1_BindingsTracking(DataGridPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<DataGridPage_obj1_Bindings>(obj);
                }

                public DataGridPage_obj1_Bindings TryGetBindingObject()
                {
                    DataGridPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_SourceDP(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DataGridPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::DataGridAnimation.Views.DataGridPage obj = sender as global::DataGridAnimation.Views.DataGridPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SourceDP(obj.SourceDP, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SourceDP":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SourceDP(obj.SourceDP, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void DependencyPropertyChanged_SourceDP(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    DataGridPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::DataGridAnimation.Views.DataGridPage obj = sender as global::DataGridAnimation.Views.DataGridPage;
                        if (obj != null)
                        {
                            bindings.Update_SourceDP(obj.SourceDP, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_SourceDP = 0;
                public void UpdateChildListeners_(global::DataGridAnimation.Views.DataGridPage obj)
                {
                    DataGridPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::DataGridAnimation.Views.DataGridPage.SourceDPProperty, tokenDPC_SourceDP);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                            tokenDPC_SourceDP = obj.RegisterPropertyChangedCallback(global::DataGridAnimation.Views.DataGridPage.SourceDPProperty, DependencyPropertyChanged_SourceDP);
                        }
                    }
                }
                public void PropertyChanged_SourceDP(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DataGridPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::DataGridAnimation.Core.Models.SampleOrder> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::DataGridAnimation.Core.Models.SampleOrder>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_SourceDP(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    DataGridPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::DataGridAnimation.Core.Models.SampleOrder> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::DataGridAnimation.Core.Models.SampleOrder>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::DataGridAnimation.Core.Models.SampleOrder> cache_SourceDP = null;
                public void UpdateChildListeners_SourceDP(global::System.Collections.ObjectModel.ObservableCollection<global::DataGridAnimation.Core.Models.SampleOrder> obj)
                {
                    if (obj != cache_SourceDP)
                    {
                        if (cache_SourceDP != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SourceDP).PropertyChanged -= PropertyChanged_SourceDP;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_SourceDP).CollectionChanged -= CollectionChanged_SourceDP;
                            cache_SourceDP = null;
                        }
                        if (obj != null)
                        {
                            cache_SourceDP = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SourceDP;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_SourceDP;
                        }
                    }
                }
                public void RegisterTwoWayListener_48(global::Microsoft.Toolkit.Uwp.UI.Controls.DataGrid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.Toolkit.Uwp.UI.Controls.DataGrid.ItemsSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_48_ItemsSource();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\DataGridPage.xaml line 18
                {
                    this.ContentArea = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 8: // Views\DataGridPage.xaml line 216
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridCellsPresenter element8 = (global::Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridCellsPresenter)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.Primitives.DataGridCellsPresenter)element8).DoubleTapped += this.CellsPresenter_DoubleTapped;
                }
                break;
            case 29: // Views\DataGridPage.xaml line 58
                {
                    global::Windows.UI.Xaml.Controls.Button element29 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element29).Click += this.Button_Click_2;
                }
                break;
            case 42: // Views\DataGridPage.xaml line 398
                {
                    global::Windows.UI.Xaml.Controls.Button element42 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element42).Click += this.Button_Click;
                }
                break;
            case 43: // Views\DataGridPage.xaml line 404
                {
                    global::Windows.UI.Xaml.Controls.Button element43 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element43).Click += this.Button_Click_1;
                }
                break;
            case 44: // Views\DataGridPage.xaml line 410
                {
                    global::Windows.UI.Xaml.Controls.Button element44 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element44).Click += this.Button_Click_3;
                }
                break;
            case 45: // Views\DataGridPage.xaml line 468
                {
                    global::Windows.UI.Xaml.Controls.Button element45 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element45).Click += this.Button_Click_2;
                }
                break;
            case 46: // Views\DataGridPage.xaml line 473
                {
                    global::Windows.UI.Xaml.Controls.Button element46 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element46).Click += this.Button_Click_4;
                }
                break;
            case 47: // Views\DataGridPage.xaml line 479
                {
                    global::Windows.UI.Xaml.Controls.Button element47 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element47).Click += this.Button_Click_5;
                }
                break;
            case 48: // Views\DataGridPage.xaml line 348
                {
                    this.dataGrid = (global::Microsoft.Toolkit.Uwp.UI.Controls.DataGrid)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.DataGrid)this.dataGrid).Sorting += this.DataGridSorting;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\DataGridPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    DataGridPage_obj1_Bindings bindings = new DataGridPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 50: // Views\DataGridPage.xaml line 386
                {                    
                    global::Windows.UI.Xaml.Controls.FontIcon element50 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                    DataGridPage_obj50_Bindings bindings = new DataGridPage_obj50_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element50.DataContext);
                    element50.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element50, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element50, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

